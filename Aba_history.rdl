import type { NextApiRequest, NextApiResponse } from "next";
import { query } from "../../lib/db";
import type { ToolData } from "../../types/tool";

export default async function handler(_: NextApiRequest, res: NextApiResponse) {
  try {
    const results = await query<ToolData>(`
      WITH Data AS (
        SELECT 
          ME.CEID,
          CEID.AREA,
          ME.PROCESS,
          CASE WHEN LAST_UPDATE_DATE BETWEEN DATEADD(HOUR, -7, GETDATE()) - 3 AND DATEADD(HOUR, -7, GETDATE()) THEN 1 ELSE 0 END AS DAYS_3,
          CASE WHEN LAST_UPDATE_DATE BETWEEN DATEADD(HOUR, -7, GETDATE()) - 7 AND DATEADD(HOUR, -7, GETDATE()) THEN 1 ELSE 0 END AS DAYS_7,
          CASE WHEN LAST_UPDATE_DATE BETWEEN DATEADD(HOUR, -7, GETDATE()) - 14 AND DATEADD(HOUR, -7, GETDATE()) THEN 1 ELSE 0 END AS DAYS_14,
          CASE WHEN LAST_UPDATE_DATE BETWEEN DATEADD(HOUR, -7, GETDATE()) - 21 AND DATEADD(HOUR, -7, GETDATE()) THEN 1 ELSE 0 END AS DAYS_21,
          CASE WHEN LAST_UPDATE_DATE BETWEEN DATEADD(HOUR, -7, GETDATE()) - 28 AND DATEADD(HOUR, -7, GETDATE()) THEN 1 ELSE 0 END AS DAYS_28,
          CASE WHEN LAST_UPDATE_DATE BETWEEN DATEADD(HOUR, -7, GETDATE()) - 35 AND DATEADD(HOUR, -7, GETDATE()) THEN 1 ELSE 0 END AS DAYS_35,
          CASE WHEN LAST_UPDATE_DATE BETWEEN DATEADD(HOUR, -7, GETDATE()) - 42 AND DATEADD(HOUR, -7, GETDATE()) THEN 1 ELSE 0 END AS DAYS_42,
          CASE WHEN LAST_UPDATE_DATE BETWEEN DATEADD(HOUR, -7, GETDATE()) - 49 AND DATEADD(HOUR, -7, GETDATE()) THEN 1 ELSE 0 END AS DAYS_49,
          CASE WHEN LAST_UPDATE_DATE BETWEEN DATEADD(HOUR, -7, GETDATE()) - 56 AND DATEADD(HOUR, -7, GETDATE()) THEN 1 ELSE 0 END AS DAYS_56,
          CASE WHEN LAST_UPDATE_DATE BETWEEN DATEADD(HOUR, -7, GETDATE()) - 63 AND DATEADD(HOUR, -7, GETDATE()) THEN 1 ELSE 0 END AS DAYS_63,
          CASE WHEN LAST_UPDATE_DATE BETWEEN DATEADD(HOUR, -7, GETDATE()) - 70 AND DATEADD(HOUR, -7, GETDATE()) THEN 1 ELSE 0 END AS DAYS_70,
          CASE WHEN LAST_UPDATE_DATE BETWEEN DATEADD(HOUR, -7, GETDATE()) - 77 AND DATEADD(HOUR, -7, GETDATE()) THEN 1 ELSE 0 END AS DAYS_77,
          CASE WHEN LAST_UPDATE_DATE BETWEEN DATEADD(HOUR, -7, GETDATE()) - 84 AND DATEADD(HOUR, -7, GETDATE()) THEN 1 ELSE 0 END AS DAYS_84,
          CASE WHEN LAST_UPDATE_DATE BETWEEN DATEADD(HOUR, -7, GETDATE()) - 91 AND DATEADD(HOUR, -7, GETDATE()) THEN 1 ELSE 0 END AS DAYS_91
        FROM dbo.F_ME_SKYNET ME
        LEFT JOIN dbo.CEID CEID ON ME.CEID = CEID.CEID
        WHERE 
          ME.REPORT_NAME = 'COS_DB_PRIORITY'
          AND ME.LAST_UPDATE_USER = 'ABA_Update'
          AND ME.OF3 = 'ABA Limiter'
          AND ME.PROCESS = 1274
          AND ME.LAST_UPDATE_DATE > DATEADD(DAY, -91, GETDATE())
      )
      SELECT 
        CEID,
        AREA,
        PROCESS,
        SUM(DAYS_3) AS ABA_LIMITER_COUNT_3DAYS,
        CAST(ROUND(1.0 * SUM(DAYS_3) / (3 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGED_3DAYS,
        SUM(DAYS_7) AS ABA_LIMITER_COUNT_7DAYS,
        CAST(ROUND(1.0 * SUM(DAYS_7) / (7 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGED_7DAYS,
        SUM(DAYS_14) AS ABA_LIMITER_COUNT_14DAYS,
        CAST(ROUND(1.0 * SUM(DAYS_14) / (14 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGED_14DAYS,
        SUM(DAYS_21) AS ABA_LIMITER_COUNT_21DAYS,
        CAST(ROUND(1.0 * SUM(DAYS_21) / (21 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGED_21DAYS,
        SUM(DAYS_28) AS ABA_LIMITER_COUNT_28DAYS,
        CAST(ROUND(1.0 * SUM(DAYS_28) / (28 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGED_28DAYS,
        SUM(DAYS_35) AS ABA_LIMITER_COUNT_35DAYS,
        CAST(ROUND(1.0 * SUM(DAYS_35) / (35 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGED_35DAYS,
        SUM(DAYS_42) AS ABA_LIMITER_COUNT_42DAYS,
        CAST(ROUND(1.0 * SUM(DAYS_42) / (42 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGED_42DAYS,
        SUM(DAYS_49) AS ABA_LIMITER_COUNT_49DAYS,
        CAST(ROUND(1.0 * SUM(DAYS_49) / (49 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGED_49DAYS,
        SUM(DAYS_56) AS ABA_LIMITER_COUNT_56DAYS,
        CAST(ROUND(1.0 * SUM(DAYS_56) / (56 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGED_56DAYS,
        SUM(DAYS_63) AS ABA_LIMITER_COUNT_63DAYS,
        CAST(ROUND(1.0 * SUM(DAYS_63) / (63 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGED_63DAYS,
        SUM(DAYS_70) AS ABA_LIMITER_COUNT_70DAYS,
        CAST(ROUND(1.0 * SUM(DAYS_70) / (70 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGED_70DAYS,
        SUM(DAYS_77) AS ABA_LIMITER_COUNT_77DAYS,
        CAST(ROUND(1.0 * SUM(DAYS_77) / (77 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGED_77DAYS,
        SUM(DAYS_84) AS ABA_LIMITER_COUNT_84DAYS,
        CAST(ROUND(1.0 * SUM(DAYS_84) / (84 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGED_84DAYS,
        SUM(DAYS_91) AS ABA_LIMITER_COUNT_91DAYS,
        CAST(ROUND(1.0 * SUM(DAYS_91) / (91 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGED_91DAYS
      FROM Data
      GROUP BY CEID, AREA, PROCESS
      ORDER BY CEID DESC;
    `);

    // âœ… Send the results directly as an array (Fix for map error)
    res.status(200).json(results);
  } catch (error) {
    console.error("Database query error:", error);

    res.status(500).json({
      error: "Failed to fetch data",
      details: error instanceof Error ? error.message : "An unknown error occurred",
    });
  }
}
