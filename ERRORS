
 â¨¯ TypeError: Cannot read properties of undefined (reading 'forEach')
    at forEach (src\components\TrendChart.tsx:19:11)
    at generateTrendData (src\components\TrendChart.tsx:31:20)
  17 |       const dayData: { date: string; [key: string]: number | string } = { date: dayLabel }
  18 |
> 19 |       data.forEach((tool) => {
     |           ^
  20 |         // Dynamically fetch values for each day from the API
  21 |         const limitationValue = (tool as any)?.[`ABA_PERCENT_FLAGED_${day + 1}DAYS`] ?? 0
  22 |         dayData[tool.CEID] = limitationValue * 100 // Convert to percentage {
  digest: '957985491'
}
 GET / 500 in 14412ms

BELOW IS MY TRENDCHART CODE 

import { LineChart, Line, XAxis, YAxis, Tooltip, Legend, CartesianGrid, ResponsiveContainer } from "recharts"
import type { ToolData } from "../types/tool"
import { Card, CardHeader, CardTitle, CardContent } from "./ui/card"

interface TrendChartProps {
  data: ToolData[]
}

const TrendChart = ({ data }: TrendChartProps) => {
  // âœ… Extract all 14-day trends dynamically
  const generateTrendData = () => {
    const trends: { date: string; [key: string]: number | string }[] = []

    // Assuming the API has daily limitation percentages for 14 days
    for (let day = 0; day < 14; day++) {
      const dayLabel = `Day ${day + 1}`
      const dayData: { date: string; [key: string]: number | string } = { date: dayLabel }

      data.forEach((tool) => {
        // Dynamically fetch values for each day from the API
        const limitationValue = (tool as any)?.[`ABA_PERCENT_FLAGED_${day + 1}DAYS`] ?? 0
        dayData[tool.CEID] = limitationValue * 100 // Convert to percentage
      })

      trends.push(dayData)
    }

    return trends
  }

  const trendData = generateTrendData()

  if (trendData.length === 0) {
    return <p className="text-center text-gray-600">No trend data available</p>
  }

  return (
    <Card className="bg-white shadow-lg rounded-lg p-4">
      <CardHeader>
        <CardTitle className="text-xl font-bold text-gray-800">ðŸ“ˆ 14-Day Trend Chart</CardTitle>
      </CardHeader>
      <CardContent>
        <ResponsiveContainer width="100%" height={400}>
          <LineChart data={trendData}>
            <CartesianGrid strokeDasharray="3 3" />
            <XAxis dataKey="date" />
            <YAxis domain={[0, 100]} tickFormatter={(value) => `${value}%`} />
            <Tooltip formatter={(value: number) => `${value.toFixed(2)}%`} />
            <Legend />
            {/* ðŸ”¥ Dynamically create a line for each CEID */}
            {data.map((tool) => (
              <Line
                key={tool.CEID}
                type="monotone"
                dataKey={tool.CEID}
                stroke={`#${Math.floor(Math.random() * 16777215).toString(16)}`} // Random color for each line
                strokeWidth={2}
                dot={false}
              />
            ))}
          </LineChart>
        </ResponsiveContainer>
      </CardContent>
    </Card>
  )
}

export default TrendChart

