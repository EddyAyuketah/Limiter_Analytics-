I need you to create an app in node js react that uses flat files to feed data to a super impresive data viewing Tableau/powerbi like application that at the top right side of the page, has a toggle alowing the user to switch from a white to a dark theme, and tright next to it, an emoji that if clicked on directs the useer to a howto page. 
at the bottom of all that there should be 3 countdown board like uis, witht the  first showing the number of CEIDS in the database, the second showing the overall average limitation of the CEIDs, the the third showing the number critical CEIDS. below all that we should have four UI components. in the first component, the app pulls the data from the flat files to show all CEIDs, and thire percentage limitation in 3 days, 7 days, 14 days, 21days  28 days, 35 days, 42days,  56, 63, 70, 77, 84, and 91 days, the second component will be trend visualizaion, the third will be a heat map like interface, the fourth forcasting and alerts. please make this as impressive as posible, foccusing on usability, UX etc. also this is the script i am using in toad to pull my data
DECLARE @AZDateTime DATETIME = FORMAT(SYSDATETIMEOFFSET() AT TIME ZONE 'UTC' AT TIME ZONE 'US Mountain Standard Time', 'yyyy-MM-dd HH:mm:ss');

WITH ABA_Raw AS (
    SELECT PROCESS_NODE,
           CEID,
           ABA_LIMITER,
           FORMAT(SYSSTARTTIME AT TIME ZONE 'UTC' AT TIME ZONE 'US Mountain Standard Time', 'yyyy-MM-dd HH:mm:ss') AS LAST_UPDATE_DATE,
           CAST(SYSSTARTTIME AS DATETIME) AS UPDATE_DATE,
           DATEADD(hour, DATEDIFF(hour, 0, SYSSTARTTIME), 0) AS UPDATE_HOUR
    FROM F32.PRIORITIES
    FOR SYSTEM_TIME ALL
    WHERE USERNAME = 'ABA_Update'
      AND PROCESS_NODE IN ('1274','1278', '5053')
      AND SYSSTARTTIME > DATEADD(DAY, -91, CURRENT_TIMESTAMP)  -- 13 weeks
      AND ABA_LIMITER LIKE '%LIMITER%'
      -- AND CEID = 'CVDph'  -- Uncomment if needed
)

, ABA_Days as (
select PROCESS_NODE,
       CEID,
       ABA_LIMITER,
       LAST_UPDATE_DATE,
			 case when LAST_UPDATE_DATE between @AZDateTime - 3 and @AZDateTime then 1 else 0 end as DAYS_3,
       case when LAST_UPDATE_DATE between @AZDateTime - 7 and @AZDateTime then 1 else 0 end as DAYS_7,
       case when LAST_UPDATE_DATE between @AZDateTime - 14 and @AZDateTime then 1 else 0 end as DAYS_14,
       case when LAST_UPDATE_DATE between @AZDateTime - 21 and @AZDateTime then 1 else 0 end as DAYS_21,
       case when LAST_UPDATE_DATE between @AZDateTime - 28 and @AZDateTime then 1 else 0 end as DAYS_28,
       case when LAST_UPDATE_DATE between @AZDateTime - 35 and @AZDateTime then 1 else 0 end as DAYS_35,
       case when LAST_UPDATE_DATE between @AZDateTime - 42 and @AZDateTime then 1 else 0 end as DAYS_42,
       case when LAST_UPDATE_DATE between @AZDateTime - 49 and @AZDateTime then 1 else 0 end as DAYS_49,
       case when LAST_UPDATE_DATE between @AZDateTime - 56 and @AZDateTime then 1 else 0 end as DAYS_56,
       case when LAST_UPDATE_DATE between @AZDateTime - 63 and @AZDateTime then 1 else 0 end as DAYS_63,
       case when LAST_UPDATE_DATE between @AZDateTime - 70 and @AZDateTime then 1 else 0 end as DAYS_70,
       case when LAST_UPDATE_DATE between @AZDateTime - 77 and @AZDateTime then 1 else 0 end as DAYS_77,
       case when LAST_UPDATE_DATE between @AZDateTime - 81 and @AZDateTime then 1 else 0 end as DAYS_84,
       case when LAST_UPDATE_DATE between @AZDateTime - 91 and @AZDateTime then 1 else 0 end as DAYS_91
  from ABA_Raw
)

select d.CEID,
       c.AREA,
       sum(case when DAYS_3 = 1 then 1 else 0 end) as ABA_LIMITER_COUNT_3DAYS,
       cast(round((1.0 * sum(case when DAYS_3 = 1 then 1 else 0 end)) / max(sum(case when DAYS_3 = 1 then 1 else 0 end)) over (partition by 1), 4) as decimal(6,4)) as ABA_PERCENT_FLAGED_3DAYS,
       sum(case when DAYS_7 = 1 then 1 else 0 end) as ABA_LIMITER_COUNT_7DAYS,
       cast(round((1.0 * sum(case when DAYS_7 = 1 then 1 else 0 end)) / max(sum(case when DAYS_7 = 1 then 1 else 0 end)) over (partition by 1), 4) as decimal(6,4)) as ABA_PERCENT_FLAGED_7DAYS,
       sum(case when DAYS_14 = 1 then 1 else 0 end) as ABA_LIMITER_COUNT_14DAYS,
       cast(round((1.0 * sum(case when DAYS_14 = 1 then 1 else 0 end)) / max(sum(case when DAYS_14 = 1 then 1 else 0 end)) over (partition by 1), 4) as decimal(6,4)) as ABA_PERCENT_FLAGED_14DAYS,
       sum(case when DAYS_21 = 1 then 1 else 0 end) as ABA_LIMITER_COUNT_21DAYS,
       cast(round((1.0 * sum(case when DAYS_21 = 1 then 1 else 0 end)) / max(sum(case when DAYS_21 = 1 then 1 else 0 end)) over (partition by 1), 4) as decimal(6,4)) as ABA_PERCENT_FLAGED_21DAYS,
       sum(case when DAYS_28 = 1 then 1 else 0 end) as ABA_LIMITER_COUNT_28DAYS,
       cast(round((1.0 * sum(case when DAYS_28 = 1 then 1 else 0 end)) / max(sum(case when DAYS_28 = 1 then 1 else 0 end)) over (partition by 1), 4) as decimal(6,4)) as ABA_PERCENT_FLAGED_28DAYS,
       sum(case when DAYS_35 = 1 then 1 else 0 end) as ABA_LIMITER_COUNT_35DAYS,
       cast(round((1.0 * sum(case when DAYS_35 = 1 then 1 else 0 end)) / max(sum(case when DAYS_35 = 1 then 1 else 0 end)) over (partition by 1), 4) as decimal(6,4)) as ABA_PERCENT_FLAGED_35DAYS,
       sum(case when DAYS_42 = 1 then 1 else 0 end) as ABA_LIMITER_COUNT_42DAYS,
       cast(round((1.0 * sum(case when DAYS_42 = 1 then 1 else 0 end)) / max(sum(case when DAYS_42 = 1 then 1 else 0 end)) over (partition by 1), 4) as decimal(6,4)) as ABA_PERCENT_FLAGED_42DAYS,
       sum(case when DAYS_49 = 1 then 1 else 0 end) as ABA_LIMITER_COUNT_49DAYS,
       cast(round((1.0 * sum(case when DAYS_49 = 1 then 1 else 0 end)) / max(sum(case when DAYS_49 = 1 then 1 else 0 end)) over (partition by 1), 4) as decimal(6,4)) as ABA_PERCENT_FLAGED_49DAYS,
       sum(case when DAYS_56 = 1 then 1 else 0 end) as ABA_LIMITER_COUNT_56DAYS,
       cast(round((1.0 * sum(case when DAYS_56 = 1 then 1 else 0 end)) / max(sum(case when DAYS_56 = 1 then 1 else 0 end)) over (partition by 1), 4) as decimal(6,4)) as ABA_PERCENT_FLAGED_56DAYS,
       sum(case when DAYS_63 = 1 then 1 else 0 end) as ABA_LIMITER_COUNT_63DAYS,
       cast(round((1.0 * sum(case when DAYS_63 = 1 then 1 else 0 end)) / max(sum(case when DAYS_63 = 1 then 1 else 0 end)) over (partition by 1), 4) as decimal(6,4)) as ABA_PERCENT_FLAGED_63DAYS,
       sum(case when DAYS_70 = 1 then 1 else 0 end) as ABA_LIMITER_COUNT_70DAYS,
       cast(round((1.0 * sum(case when DAYS_70 = 1 then 1 else 0 end)) / max(sum(case when DAYS_70 = 1 then 1 else 0 end)) over (partition by 1), 4) as decimal(6,4)) as ABA_PERCENT_FLAGED_70DAYS,
       sum(case when DAYS_77 = 1 then 1 else 0 end) as ABA_LIMITER_COUNT_77DAYS,
       cast(round((1.0 * sum(case when DAYS_77 = 1 then 1 else 0 end)) / max(sum(case when DAYS_77 = 1 then 1 else 0 end)) over (partition by 1), 4) as decimal(6,4)) as ABA_PERCENT_FLAGED_77DAYS,
       sum(case when DAYS_84 = 1 then 1 else 0 end) as ABA_LIMITER_COUNT_84DAYS,
       cast(round((1.0 * sum(case when DAYS_84 = 1 then 1 else 0 end)) / max(sum(case when DAYS_84 = 1 then 1 else 0 end)) over (partition by 1), 4) as decimal(6,4)) as ABA_PERCENT_FLAGED_84DAYS,
       sum(case when DAYS_91 = 1 then 1 else 0 end) as ABA_LIMITER_COUNT_91DAYS,
       cast(round((1.0 * sum(case when DAYS_91 = 1 then 1 else 0 end)) / max(sum(case when DAYS_91 = 1 then 1 else 0 end)) over (partition by 1), 4) as decimal(6,4)) as ABA_PERCENT_FLAGED_91DAYS
  from ABA_Days d
  left join F32.CEID c on d.CEID = c.CEID and c.PROCESS_NODE = d.PROCESS_NODE
 group by d.CEID, c.AREA

 and now i want the app to pull from flat files updated every hour.
