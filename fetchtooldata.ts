import type { NextApiRequest, NextApiResponse } from "next";
import { query } from "../../lib/db";
import type { ToolData } from "@/types/tool";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    const sqlQuery = `
      DECLARE @AZDateTime DATETIME = DATEADD(HOUR, -7, current_timestamp);

      SELECT 
          CEID,
          SUM(CASE WHEN DAYS_3 = 1 THEN 1 ELSE 0 END) AS ABA_LIMITER_COUNT_3DAYS,
          CAST(ROUND((1.0 * SUM(CASE WHEN DAYS_3 = 1 THEN 1 ELSE 0 END)) / (3 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGGED_3DAYS,
          SUM(CASE WHEN DAYS_7 = 1 THEN 1 ELSE 0 END) AS ABA_LIMITER_COUNT_7DAYS,
          CAST(ROUND((1.0 * SUM(CASE WHEN DAYS_7 = 1 THEN 1 ELSE 0 END)) / (7 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGGED_7DAYS,
          SUM(CASE WHEN DAYS_14 = 1 THEN 1 ELSE 0 END) AS ABA_LIMITER_COUNT_14DAYS,
          CAST(ROUND((1.0 * SUM(CASE WHEN DAYS_14 = 1 THEN 1 ELSE 0 END)) / (14 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGGED_14DAYS,
          SUM(CASE WHEN DAYS_21 = 1 THEN 1 ELSE 0 END) AS ABA_LIMITER_COUNT_21DAYS,
          CAST(ROUND((1.0 * SUM(CASE WHEN DAYS_21 = 1 THEN 1 ELSE 0 END)) / (21 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGGED_21DAYS,
          SUM(CASE WHEN DAYS_28 = 1 THEN 1 ELSE 0 END) AS ABA_LIMITER_COUNT_28DAYS,
          CAST(ROUND((1.0 * SUM(CASE WHEN DAYS_28 = 1 THEN 1 ELSE 0 END)) / (28 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGGED_28DAYS,
          SUM(CASE WHEN DAYS_35 = 1 THEN 1 ELSE 0 END) AS ABA_LIMITER_COUNT_35DAYS,
          CAST(ROUND((1.0 * SUM(CASE WHEN DAYS_35 = 1 THEN 1 ELSE 0 END)) / (35 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGGED_35DAYS,
          SUM(CASE WHEN DAYS_42 = 1 THEN 1 ELSE 0 END) AS ABA_LIMITER_COUNT_42DAYS,
          CAST(ROUND((1.0 * SUM(CASE WHEN DAYS_42 = 1 THEN 1 ELSE 0 END)) / (42 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGGED_42DAYS,
          SUM(CASE WHEN DAYS_49 = 1 THEN 1 ELSE 0 END) AS ABA_LIMITER_COUNT_49DAYS,
          CAST(ROUND((1.0 * SUM(CASE WHEN DAYS_49 = 1 THEN 1 ELSE 0 END)) / (49 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGGED_49DAYS,
          SUM(CASE WHEN DAYS_56 = 1 THEN 1 ELSE 0 END) AS ABA_LIMITER_COUNT_56DAYS,
          CAST(ROUND((1.0 * SUM(CASE WHEN DAYS_56 = 1 THEN 1 ELSE 0 END)) / (56 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGGED_56DAYS,
          SUM(CASE WHEN DAYS_63 = 1 THEN 1 ELSE 0 END) AS ABA_LIMITER_COUNT_63DAYS,
          CAST(ROUND((1.0 * SUM(CASE WHEN DAYS_63 = 1 THEN 1 ELSE 0 END)) / (63 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGGED_63DAYS,
          SUM(CASE WHEN DAYS_70 = 1 THEN 1 ELSE 0 END) AS ABA_LIMITER_COUNT_70DAYS,
          CAST(ROUND((1.0 * SUM(CASE WHEN DAYS_70 = 1 THEN 1 ELSE 0 END)) / (70 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGGED_70DAYS,
          SUM(CASE WHEN DAYS_77 = 1 THEN 1 ELSE 0 END) AS ABA_LIMITER_COUNT_77DAYS,
          CAST(ROUND((1.0 * SUM(CASE WHEN DAYS_77 = 1 THEN 1 ELSE 0 END)) / (77 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGGED_77DAYS,
          SUM(CASE WHEN DAYS_84 = 1 THEN 1 ELSE 0 END) AS ABA_LIMITER_COUNT_84DAYS,
          CAST(ROUND((1.0 * SUM(CASE WHEN DAYS_84 = 1 THEN 1 ELSE 0 END)) / (84 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGGED_84DAYS,
          SUM(CASE WHEN DAYS_91 = 1 THEN 1 ELSE 0 END) AS ABA_LIMITER_COUNT_91DAYS,
          CAST(ROUND((1.0 * SUM(CASE WHEN DAYS_91 = 1 THEN 1 ELSE 0 END)) / (91 * 12), 4) AS DECIMAL(6,4)) AS ABA_PERCENT_FLAGGED_91DAYS
      FROM (
          SELECT 
              CEID,
              CASE WHEN LAST_UPDATE_DATE BETWEEN @AZDateTime - 3 AND @AZDateTime THEN 1 ELSE 0 END AS DAYS_3,
              CASE WHEN LAST_UPDATE_DATE BETWEEN @AZDateTime - 7 AND @AZDateTime THEN 1 ELSE 0 END AS DAYS_7,
              CASE WHEN LAST_UPDATE_DATE BETWEEN @AZDateTime - 14 AND @AZDateTime THEN 1 ELSE 0 END AS DAYS_14,
              CASE WHEN LAST_UPDATE_DATE BETWEEN @AZDateTime - 21 AND @AZDateTime THEN 1 ELSE 0 END AS DAYS_21,
              CASE WHEN LAST_UPDATE_DATE BETWEEN @AZDateTime - 28 AND @AZDateTime THEN 1 ELSE 0 END AS DAYS_28,
              CASE WHEN LAST_UPDATE_DATE BETWEEN @AZDateTime - 35 AND @AZDateTime THEN 1 ELSE 0 END AS DAYS_35,
              CASE WHEN LAST_UPDATE_DATE BETWEEN @AZDateTime - 42 AND @AZDateTime THEN 1 ELSE 0 END AS DAYS_42,
              CASE WHEN LAST_UPDATE_DATE BETWEEN @AZDateTime - 49 AND @AZDateTime THEN 1 ELSE 0 END AS DAYS_49,
              CASE WHEN LAST_UPDATE_DATE BETWEEN @AZDateTime - 56 AND @AZDateTime THEN 1 ELSE 0 END AS DAYS_56,
              CASE WHEN LAST_UPDATE_DATE BETWEEN @AZDateTime - 63 AND @AZDateTime THEN 1 ELSE 0 END AS DAYS_63,
              CASE WHEN LAST_UPDATE_DATE BETWEEN @AZDateTime - 70 AND @AZDateTime THEN 1 ELSE 0 END AS DAYS_70,
              CASE WHEN LAST_UPDATE_DATE BETWEEN @AZDateTime - 77 AND @AZDateTime THEN 1 ELSE 0 END AS DAYS_77,
              CASE WHEN LAST_UPDATE_DATE BETWEEN @AZDateTime - 84 AND @AZDateTime THEN 1 ELSE 0 END AS DAYS_84,
              CASE WHEN LAST_UPDATE_DATE BETWEEN @AZDateTime - 91 AND @AZDateTime THEN 1 ELSE 0 END AS DAYS_91
          FROM F_ME_SKYNET
          WHERE REPORT_NAME = 'COS_DB_PRIORITY'
      ) AS data
      GROUP BY CEID;
    `;

    const results: ToolData[] = await query<ToolData>(sqlQuery);

    res.status(200).json(results);
  } catch (error) {
    res.status(500).json({
      error: "Failed to fetch data from the database",
      details: error instanceof Error ? error.message : String(error),
    });
  }
}
